name: Upload Signed MSI to SFTP

on:
  workflow_run:
    workflows: ["Sign MSI with Azure Trusted Signing"]
    types:
      - completed

jobs:
  sign-msi:
    runs-on: ubuntu-latest  # <-- Change this to Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get Commit Message (Version Number)
        id: get_version
        run: echo "VERSION=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Define Root Path
        run: echo "SFTP_ROOT=/home/S8bt11tCw6zWQ7/html/wp-content/pdmshell_test" >> $GITHUB_ENV
  
      - name: Create Version Folder on SFTP (Using SSH)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 22
          script: |
            mkdir -p "${{ env.SFTP_ROOT }}/${{ env.VERSION }}"
            ls -ld "${{ env.SFTP_ROOT }}/${{ env.VERSION }}"  # Verify folder creation
            
      - name: Upload MSI To SFTP
        uses: wlixcc/SFTP-Deploy-Action@v1.2.5
        with:
          username: ${{ secrets.SFTP_USERNAME }}
          server: ${{ secrets.SFTP_HOST }}
          port: 22
          password: ${{ secrets.SFTP_PASSWORD }}
          local_path: "./PDMCLI.msix"
          remote_path: "${{ env.SFTP_ROOT }}/${{ env.VERSION }}"
          sftp_only: true
          sftpArgs: "-vvv"  # Enable verbose debugging output

      
          
      - name: Retrieve version.txt from SFTP (using SSH)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 22
          script: |
            FILE="${{ env.SFTP_ROOT }}/version.txt"
            echo "Checking if version.txt exists..."
            ls -lah "${{ env.SFTP_ROOT }}/"  # List directory contents
            if [ ! -f "$FILE" ]; then
              echo "Creating version.txt as it does not exist."
              touch "$FILE"
            fi
            echo "Copying version.txt to local workspace..."
            cat "$FILE" > version.txt

      - name: Append New Version to version.txt on SFTP
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 22
          script: |
            VERSION_FILE="${{ env.SFTP_ROOT }}/version.txt"
            
            echo "Appending version '${{ env.VERSION }}' to version.txt..."
            
            # Ensure the file exists, then append the new version
            touch "$VERSION_FILE"
            echo "${{ env.VERSION }}" >> "$VERSION_FILE"
      
            echo "Updated version.txt contents:"
            cat "$VERSION_FILE"  # Debugging step to verify contents
